// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Testiranje
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Testiranje unosa, azuriranja i brisanja artikla u formi pregled artikla
        /// </summary>
        public void PregledArtikla()
        {
            #region Variable Declarations
            WinEdit uITxtKorImeEdit = this.UIPrijavaWindow.UITxtKorImeWindow.UITxtKorImeEdit;
            WinEdit uITxtLozinkaEdit = this.UIPrijavaWindow.UITxtLozinkaWindow.UITxtLozinkaEdit;
            WinButton uIPrijavaButton = this.UIPrijavaWindow.UIPrijavaWindow1.UIPrijavaButton;
            WinButton uIArtikliButton = this.UICvjećarnaWindow.UIArtikliWindow.UIArtikliButton;
            WinEdit uITxtVrstaEdit = this.UICvjećarnaWindow.UIPregledartiklaWindow.UITxtVrstaWindow.UITxtVrstaEdit;
            WinButton uISpremiButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UISpremiWindow.UISpremiButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uIUnosnovogartiklaButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIUnosnovogartiklaWindow.UIUnosnovogartiklaButton;
            WinComboBox uITipartiklaComboBox = this.UICvjećarnaWindow.UIPregledartiklaWindow.UICmboxTipArtiklaWindow.UITipartiklaComboBox;
            WinEdit uITxtNazivEdit = this.UICvjećarnaWindow.UIPregledartiklaWindow.UINazivartiklaWindow.UITxtNazivEdit;
            WinEdit uITxtCijenaEdit = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIUnesitecijenuuknWindow.UITxtCijenaEdit;
            WinEdit uITxtKolicinaEdit = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIUnesitekoličinuWindow.UITxtKolicinaEdit;
            WinButton uIDodajButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIDodajWindow.UIDodajButton;
            WinClient uIPregledartiklaClient = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIPregledartiklaClient;
            WinCell uIProba12345678Cell = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIArtikliDataGridViewWindow.UIDataGridViewTable.UIRow29Row.UIProba12345678Cell;
            WinButton uIPovratakButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIPovratakWindow.UIPovratakButton;
            WinButton uIUrediartikleButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIUrediartikleWindow.UIUrediartikleButton;
            WinButton uIAžurirajButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIDodajWindow.UIAžurirajButton;
            WinWindow uIItemWindow = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIArtikliDataGridViewWindow.UIDataGridViewTable.UIItemWindow;
            WinButton uIBrišiButton = this.UICvjećarnaWindow.UIPregledartiklaWindow.UIBrišiWindow.UIBrišiButton;
            WinButton uIYesButton = this.UIProvjeraWindow.UIYesWindow.UIYesButton;
            #endregion

            // Type 'vkovacic' in 'txtKorIme' text box
            uITxtKorImeEdit.Text = this.PregledArtiklaParams.UITxtKorImeEditText;

            // Type '{Tab}' in 'txtKorIme' text box
            Keyboard.SendKeys(uITxtKorImeEdit, this.PregledArtiklaParams.UITxtKorImeEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtLozinka' text box
            Keyboard.SendKeys(uITxtLozinkaEdit, this.PregledArtiklaParams.UITxtLozinkaEditSendKeys, true);

            // Click 'Prijava' button
            Mouse.Click(uIPrijavaButton, new Point(43, 29));

            // Click 'Artikli' button
            Mouse.Click(uIArtikliButton, new Point(47, 34));

            // Type 'Proba' in 'txtVrsta' text box
            uITxtVrstaEdit.Text = this.PregledArtiklaParams.UITxtVrstaEditText;

            // Click 'Spremi' button
            Mouse.Click(uISpremiButton, new Point(37, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(28, 16));

            // Type 'Proba1' in 'txtVrsta' text box
            uITxtVrstaEdit.Text = this.PregledArtiklaParams.UITxtVrstaEditText1;

            // Click 'Spremi' button
            Mouse.Click(uISpremiButton, new Point(55, 16));

            // Click 'Unos novog artikla' button
            Mouse.Click(uIUnosnovogartiklaButton, new Point(76, 54));

            // Select 'Cvijece' in 'Tip artikla:' combo box
            uITipartiklaComboBox.SelectedItem = this.PregledArtiklaParams.UITipartiklaComboBoxSelectedItem;

            // Type 'Proba12345678' in 'txtNaziv' text box
            uITxtNazivEdit.Text = this.PregledArtiklaParams.UITxtNazivEditText;

            // Type '10' in 'txtCijena' text box
            uITxtCijenaEdit.Text = this.PregledArtiklaParams.UITxtCijenaEditText;

            // Type '15' in 'txtKolicina' text box
            uITxtKolicinaEdit.Text = this.PregledArtiklaParams.UITxtKolicinaEditText;

            // Click 'Dodaj' button
            Mouse.Click(uIDodajButton, new Point(36, 32));

            // Click 'Pregled artikla' client
            Mouse.Click(uIPregledartiklaClient, new Point(1169, 575));

            // Click 'Proba12345678' cell
            Mouse.Click(uIProba12345678Cell, new Point(41, 14));

            // Click 'Povratak' button
            Mouse.Click(uIPovratakButton, new Point(40, 24));

            // Click 'Pregled artikla' client
            Mouse.Click(uIPregledartiklaClient, new Point(1155, 567));

            // Click 'Proba12345678' cell
            Mouse.Click(uIProba12345678Cell, new Point(36, 9));

            // Click 'Uredi artikle' button
            Mouse.Click(uIUrediartikleButton, new Point(71, 52));

            // Type 'Ambrozija' in 'txtNaziv' text box
            uITxtNazivEdit.Text = this.PregledArtiklaParams.UITxtNazivEditText1;

            // Click 'Ažuriraj' button
            Mouse.Click(uIAžurirajButton, new Point(26, 29));

            // Move window to 'Pregled artikla' client
            uIPregledartiklaClient.EnsureClickable(new Point(1167, 456));
            Mouse.StartDragging(uIItemWindow, new Point(17, 73));
            Mouse.StopDragging(uIPregledartiklaClient, new Point(1167, 456));

            // Click 'Povratak' button
            Mouse.Click(uIPovratakButton, new Point(28, 22));

            // Click 'Pregled artikla' client
            Mouse.Click(uIPregledartiklaClient, new Point(1170, 567));

            // Click 'Proba12345678' cell
            Mouse.Click(uIProba12345678Cell, new Point(50, 13));

            // Click 'Briši' button
            Mouse.Click(uIBrišiButton, new Point(101, 26));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(54, 11));
        }
        
        #region Properties
        public virtual PregledArtiklaParams PregledArtiklaParams
        {
            get
            {
                if ((this.mPregledArtiklaParams == null))
                {
                    this.mPregledArtiklaParams = new PregledArtiklaParams();
                }
                return this.mPregledArtiklaParams;
            }
        }
        
        public UIPrijavaWindow UIPrijavaWindow
        {
            get
            {
                if ((this.mUIPrijavaWindow == null))
                {
                    this.mUIPrijavaWindow = new UIPrijavaWindow();
                }
                return this.mUIPrijavaWindow;
            }
        }
        
        public UICvjećarnaWindow UICvjećarnaWindow
        {
            get
            {
                if ((this.mUICvjećarnaWindow == null))
                {
                    this.mUICvjećarnaWindow = new UICvjećarnaWindow();
                }
                return this.mUICvjećarnaWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIProvjeraWindow UIProvjeraWindow
        {
            get
            {
                if ((this.mUIProvjeraWindow == null))
                {
                    this.mUIProvjeraWindow = new UIProvjeraWindow();
                }
                return this.mUIProvjeraWindow;
            }
        }
        #endregion
        
        #region Fields
        private PregledArtiklaParams mPregledArtiklaParams;
        
        private UIPrijavaWindow mUIPrijavaWindow;
        
        private UICvjećarnaWindow mUICvjećarnaWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIProvjeraWindow mUIProvjeraWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PregledArtikla'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PregledArtiklaParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'vkovacic' in 'txtKorIme' text box
        /// </summary>
        public string UITxtKorImeEditText = "vkovacic";
        
        /// <summary>
        /// Type '{Tab}' in 'txtKorIme' text box
        /// </summary>
        public string UITxtKorImeEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtLozinka' text box
        /// </summary>
        public string UITxtLozinkaEditSendKeys = "I1Tbta0jzhrd6T9M62YK4lqYaz6wDthT";
        
        /// <summary>
        /// Type 'Proba' in 'txtVrsta' text box
        /// </summary>
        public string UITxtVrstaEditText = "Proba";
        
        /// <summary>
        /// Type 'Proba1' in 'txtVrsta' text box
        /// </summary>
        public string UITxtVrstaEditText1 = "Proba1";
        
        /// <summary>
        /// Select 'Cvijece' in 'Tip artikla:' combo box
        /// </summary>
        public string UITipartiklaComboBoxSelectedItem = "Cvijece";
        
        /// <summary>
        /// Type 'Proba12345678' in 'txtNaziv' text box
        /// </summary>
        public string UITxtNazivEditText = "Proba12345678";
        
        /// <summary>
        /// Type '10' in 'txtCijena' text box
        /// </summary>
        public string UITxtCijenaEditText = "10";
        
        /// <summary>
        /// Type '15' in 'txtKolicina' text box
        /// </summary>
        public string UITxtKolicinaEditText = "15";
        
        /// <summary>
        /// Type 'Ambrozija' in 'txtNaziv' text box
        /// </summary>
        public string UITxtNazivEditText1 = "Ambrozija";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPrijavaWindow : WinWindow
    {
        
        public UIPrijavaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Prijava";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public UITxtKorImeWindow UITxtKorImeWindow
        {
            get
            {
                if ((this.mUITxtKorImeWindow == null))
                {
                    this.mUITxtKorImeWindow = new UITxtKorImeWindow(this);
                }
                return this.mUITxtKorImeWindow;
            }
        }
        
        public UITxtLozinkaWindow UITxtLozinkaWindow
        {
            get
            {
                if ((this.mUITxtLozinkaWindow == null))
                {
                    this.mUITxtLozinkaWindow = new UITxtLozinkaWindow(this);
                }
                return this.mUITxtLozinkaWindow;
            }
        }
        
        public UIPrijavaWindow1 UIPrijavaWindow1
        {
            get
            {
                if ((this.mUIPrijavaWindow1 == null))
                {
                    this.mUIPrijavaWindow1 = new UIPrijavaWindow1(this);
                }
                return this.mUIPrijavaWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UITxtKorImeWindow mUITxtKorImeWindow;
        
        private UITxtLozinkaWindow mUITxtLozinkaWindow;
        
        private UIPrijavaWindow1 mUIPrijavaWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtKorImeWindow : WinWindow
    {
        
        public UITxtKorImeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtKorIme";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtKorImeEdit
        {
            get
            {
                if ((this.mUITxtKorImeEdit == null))
                {
                    this.mUITxtKorImeEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtKorImeEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Lozinka:";
                    this.mUITxtKorImeEdit.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUITxtKorImeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtKorImeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtLozinkaWindow : WinWindow
    {
        
        public UITxtLozinkaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLozinka";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtLozinkaEdit
        {
            get
            {
                if ((this.mUITxtLozinkaEdit == null))
                {
                    this.mUITxtLozinkaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtLozinkaEdit.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUITxtLozinkaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtLozinkaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPrijavaWindow1 : WinWindow
    {
        
        public UIPrijavaWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPrijava";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinButton UIPrijavaButton
        {
            get
            {
                if ((this.mUIPrijavaButton == null))
                {
                    this.mUIPrijavaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPrijavaButton.SearchProperties[WinButton.PropertyNames.Name] = "Prijava";
                    this.mUIPrijavaButton.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUIPrijavaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPrijavaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICvjećarnaWindow : WinWindow
    {
        
        public UICvjećarnaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Cvjećarna";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Cvjećarna");
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public UIArtikliWindow UIArtikliWindow
        {
            get
            {
                if ((this.mUIArtikliWindow == null))
                {
                    this.mUIArtikliWindow = new UIArtikliWindow(this);
                }
                return this.mUIArtikliWindow;
            }
        }
        
        public UIPregledartiklaWindow UIPregledartiklaWindow
        {
            get
            {
                if ((this.mUIPregledartiklaWindow == null))
                {
                    this.mUIPregledartiklaWindow = new UIPregledartiklaWindow(this);
                }
                return this.mUIPregledartiklaWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIArtikliWindow mUIArtikliWindow;
        
        private UIPregledartiklaWindow mUIPregledartiklaWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArtikliWindow : WinWindow
    {
        
        public UIArtikliWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnArtikli";
            this.WindowTitles.Add("Cvjećarna");
            #endregion
        }
        
        #region Properties
        public WinButton UIArtikliButton
        {
            get
            {
                if ((this.mUIArtikliButton == null))
                {
                    this.mUIArtikliButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIArtikliButton.SearchProperties[WinButton.PropertyNames.Name] = "Artikli";
                    this.mUIArtikliButton.WindowTitles.Add("Cvjećarna");
                    #endregion
                }
                return this.mUIArtikliButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIArtikliButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPregledartiklaWindow : WinWindow
    {
        
        public UIPregledartiklaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmPregledArtikla";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public UITxtVrstaWindow UITxtVrstaWindow
        {
            get
            {
                if ((this.mUITxtVrstaWindow == null))
                {
                    this.mUITxtVrstaWindow = new UITxtVrstaWindow(this);
                }
                return this.mUITxtVrstaWindow;
            }
        }
        
        public UISpremiWindow UISpremiWindow
        {
            get
            {
                if ((this.mUISpremiWindow == null))
                {
                    this.mUISpremiWindow = new UISpremiWindow(this);
                }
                return this.mUISpremiWindow;
            }
        }
        
        public UIUnosnovogartiklaWindow UIUnosnovogartiklaWindow
        {
            get
            {
                if ((this.mUIUnosnovogartiklaWindow == null))
                {
                    this.mUIUnosnovogartiklaWindow = new UIUnosnovogartiklaWindow(this);
                }
                return this.mUIUnosnovogartiklaWindow;
            }
        }
        
        public UICmboxTipArtiklaWindow UICmboxTipArtiklaWindow
        {
            get
            {
                if ((this.mUICmboxTipArtiklaWindow == null))
                {
                    this.mUICmboxTipArtiklaWindow = new UICmboxTipArtiklaWindow(this);
                }
                return this.mUICmboxTipArtiklaWindow;
            }
        }
        
        public UINazivartiklaWindow UINazivartiklaWindow
        {
            get
            {
                if ((this.mUINazivartiklaWindow == null))
                {
                    this.mUINazivartiklaWindow = new UINazivartiklaWindow(this);
                }
                return this.mUINazivartiklaWindow;
            }
        }
        
        public UIUnesitecijenuuknWindow UIUnesitecijenuuknWindow
        {
            get
            {
                if ((this.mUIUnesitecijenuuknWindow == null))
                {
                    this.mUIUnesitecijenuuknWindow = new UIUnesitecijenuuknWindow(this);
                }
                return this.mUIUnesitecijenuuknWindow;
            }
        }
        
        public UIUnesitekoličinuWindow UIUnesitekoličinuWindow
        {
            get
            {
                if ((this.mUIUnesitekoličinuWindow == null))
                {
                    this.mUIUnesitekoličinuWindow = new UIUnesitekoličinuWindow(this);
                }
                return this.mUIUnesitekoličinuWindow;
            }
        }
        
        public UIDodajWindow UIDodajWindow
        {
            get
            {
                if ((this.mUIDodajWindow == null))
                {
                    this.mUIDodajWindow = new UIDodajWindow(this);
                }
                return this.mUIDodajWindow;
            }
        }
        
        public WinClient UIPregledartiklaClient
        {
            get
            {
                if ((this.mUIPregledartiklaClient == null))
                {
                    this.mUIPregledartiklaClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIPregledartiklaClient.SearchProperties[WinControl.PropertyNames.Name] = "Pregled artikla";
                    this.mUIPregledartiklaClient.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIPregledartiklaClient;
            }
        }
        
        public UIArtikliDataGridViewWindow UIArtikliDataGridViewWindow
        {
            get
            {
                if ((this.mUIArtikliDataGridViewWindow == null))
                {
                    this.mUIArtikliDataGridViewWindow = new UIArtikliDataGridViewWindow(this);
                }
                return this.mUIArtikliDataGridViewWindow;
            }
        }
        
        public UIPovratakWindow UIPovratakWindow
        {
            get
            {
                if ((this.mUIPovratakWindow == null))
                {
                    this.mUIPovratakWindow = new UIPovratakWindow(this);
                }
                return this.mUIPovratakWindow;
            }
        }
        
        public UIUrediartikleWindow UIUrediartikleWindow
        {
            get
            {
                if ((this.mUIUrediartikleWindow == null))
                {
                    this.mUIUrediartikleWindow = new UIUrediartikleWindow(this);
                }
                return this.mUIUrediartikleWindow;
            }
        }
        
        public UIBrišiWindow UIBrišiWindow
        {
            get
            {
                if ((this.mUIBrišiWindow == null))
                {
                    this.mUIBrišiWindow = new UIBrišiWindow(this);
                }
                return this.mUIBrišiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtVrstaWindow mUITxtVrstaWindow;
        
        private UISpremiWindow mUISpremiWindow;
        
        private UIUnosnovogartiklaWindow mUIUnosnovogartiklaWindow;
        
        private UICmboxTipArtiklaWindow mUICmboxTipArtiklaWindow;
        
        private UINazivartiklaWindow mUINazivartiklaWindow;
        
        private UIUnesitecijenuuknWindow mUIUnesitecijenuuknWindow;
        
        private UIUnesitekoličinuWindow mUIUnesitekoličinuWindow;
        
        private UIDodajWindow mUIDodajWindow;
        
        private WinClient mUIPregledartiklaClient;
        
        private UIArtikliDataGridViewWindow mUIArtikliDataGridViewWindow;
        
        private UIPovratakWindow mUIPovratakWindow;
        
        private UIUrediartikleWindow mUIUrediartikleWindow;
        
        private UIBrišiWindow mUIBrišiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtVrstaWindow : WinWindow
    {
        
        public UITxtVrstaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtVrsta";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtVrstaEdit
        {
            get
            {
                if ((this.mUITxtVrstaEdit == null))
                {
                    this.mUITxtVrstaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtVrstaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Naziv kategorije:";
                    this.mUITxtVrstaEdit.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUITxtVrstaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtVrstaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISpremiWindow : WinWindow
    {
        
        public UISpremiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSpremi";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UISpremiButton
        {
            get
            {
                if ((this.mUISpremiButton == null))
                {
                    this.mUISpremiButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISpremiButton.SearchProperties[WinButton.PropertyNames.Name] = "Spremi";
                    this.mUISpremiButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUISpremiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISpremiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUnosnovogartiklaWindow : WinWindow
    {
        
        public UIUnosnovogartiklaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnUnosNovogArtikla";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UIUnosnovogartiklaButton
        {
            get
            {
                if ((this.mUIUnosnovogartiklaButton == null))
                {
                    this.mUIUnosnovogartiklaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIUnosnovogartiklaButton.SearchProperties[WinButton.PropertyNames.Name] = "Unos novog artikla";
                    this.mUIUnosnovogartiklaButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIUnosnovogartiklaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIUnosnovogartiklaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICmboxTipArtiklaWindow : WinWindow
    {
        
        public UICmboxTipArtiklaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmboxTipArtikla";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinComboBox UITipartiklaComboBox
        {
            get
            {
                if ((this.mUITipartiklaComboBox == null))
                {
                    this.mUITipartiklaComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUITipartiklaComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Tip artikla:";
                    this.mUITipartiklaComboBox.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUITipartiklaComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUITipartiklaComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINazivartiklaWindow : WinWindow
    {
        
        public UINazivartiklaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNaziv";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNazivEdit
        {
            get
            {
                if ((this.mUITxtNazivEdit == null))
                {
                    this.mUITxtNazivEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNazivEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Količina:";
                    this.mUITxtNazivEdit.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUITxtNazivEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNazivEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUnesitecijenuuknWindow : WinWindow
    {
        
        public UIUnesitecijenuuknWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCijena";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtCijenaEdit
        {
            get
            {
                if ((this.mUITxtCijenaEdit == null))
                {
                    this.mUITxtCijenaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtCijenaEdit.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUITxtCijenaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtCijenaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUnesitekoličinuWindow : WinWindow
    {
        
        public UIUnesitekoličinuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtKolicina";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtKolicinaEdit
        {
            get
            {
                if ((this.mUITxtKolicinaEdit == null))
                {
                    this.mUITxtKolicinaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtKolicinaEdit.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUITxtKolicinaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtKolicinaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDodajWindow : WinWindow
    {
        
        public UIDodajWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDodaj";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UIDodajButton
        {
            get
            {
                if ((this.mUIDodajButton == null))
                {
                    this.mUIDodajButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDodajButton.SearchProperties[WinButton.PropertyNames.Name] = "Dodaj";
                    this.mUIDodajButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIDodajButton;
            }
        }
        
        public WinButton UIAžurirajButton
        {
            get
            {
                if ((this.mUIAžurirajButton == null))
                {
                    this.mUIAžurirajButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAžurirajButton.SearchProperties[WinButton.PropertyNames.Name] = "Ažuriraj";
                    this.mUIAžurirajButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIAžurirajButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDodajButton;
        
        private WinButton mUIAžurirajButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArtikliDataGridViewWindow : WinWindow
    {
        
        public UIArtikliDataGridViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "artikliDataGridView";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public UIRow29Row UIRow29Row
        {
            get
            {
                if ((this.mUIRow29Row == null))
                {
                    this.mUIRow29Row = new UIRow29Row(this);
                }
                return this.mUIRow29Row;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Vertical Scroll Bar";
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SCROLLBAR", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRow29Row mUIRow29Row;
        
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow29Row : WinRow
    {
        
        public UIRow29Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";Proba12345678;10;15", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinCell UIProba12345678Cell
        {
            get
            {
                if ((this.mUIProba12345678Cell == null))
                {
                    this.mUIProba12345678Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIProba12345678Cell.SearchProperties[WinCell.PropertyNames.Value] = "Proba12345678";
                    this.mUIProba12345678Cell.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIProba12345678Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIProba12345678Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPovratakWindow : WinWindow
    {
        
        public UIPovratakWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPovratak1";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UIPovratakButton
        {
            get
            {
                if ((this.mUIPovratakButton == null))
                {
                    this.mUIPovratakButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPovratakButton.SearchProperties[WinButton.PropertyNames.Name] = "Povratak";
                    this.mUIPovratakButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIPovratakButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPovratakButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUrediartikleWindow : WinWindow
    {
        
        public UIUrediartikleWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAzuriraj";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UIUrediartikleButton
        {
            get
            {
                if ((this.mUIUrediartikleButton == null))
                {
                    this.mUIUrediartikleButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIUrediartikleButton.SearchProperties[WinButton.PropertyNames.Name] = "Uredi artikle";
                    this.mUIUrediartikleButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIUrediartikleButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIUrediartikleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBrišiWindow : WinWindow
    {
        
        public UIBrišiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnBrisi";
            this.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
            #endregion
        }
        
        #region Properties
        public WinButton UIBrišiButton
        {
            get
            {
                if ((this.mUIBrišiButton == null))
                {
                    this.mUIBrišiButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBrišiButton.SearchProperties[WinButton.PropertyNames.Name] = "Briši";
                    this.mUIBrišiButton.WindowTitles.Add("Cvjećarna - [Pregled artikla]");
                    #endregion
                }
                return this.mUIBrišiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBrišiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIProvjeraWindow : WinWindow
    {
        
        public UIProvjeraWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Provjera";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Provjera");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Provjera");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Provjera");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
